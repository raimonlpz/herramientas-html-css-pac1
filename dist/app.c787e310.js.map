{"version":3,"sources":["../src/app.js"],"names":["booksJson","booksParsed","JSON","parse","getFourRandomBooks","arrRand","randNum","Math","floor","random","length","indexOf","push","populateShowcase","$showcase","document","getElementById","map","book","divWrapper","createElement","className","bookImg","src","imgs","img","replace","alt","title","bookContent","innerHTML","author","icon","price","append","appendChild","closeNavMenu","$navItems","querySelectorAll","$checkBox","forEach","$i","addEventListener","e","target","nodeName","checked","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EI,aA3EJ,IAAA,EAAA,EAAA,QAAA,OACA,EAAA,EAAA,QAAA,mBA0EI,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxEJ,IAAMA,EAAN,g3FACMC,EAAcC,KAAKC,MAAMH,GAEzBI,EAAqB,WACnBC,IAAAA,EAAU,GACX,EAAA,CACOC,IAAAA,EAAUC,KAAKC,MAAMD,KAAKE,SAAWR,EAAYS,SACV,GAA1CL,EAAQM,QAAQV,EAAYK,KAC3BD,EAAQO,KAAKX,EAAYK,UAExBD,EAAQK,OAAS,GAEnBL,OAAAA,GAGLQ,EAAmB,WACfC,IAAAA,EAAYC,SAASC,eAAe,kBACxBZ,IAERa,IAAI,SAAAC,GACJC,IAAAA,EAAaJ,SAASK,cAAc,OAC1CD,EAAWE,UAAY,gBAEjBC,IAAAA,EAAUP,SAASK,cAAc,OACvCE,EAAQD,UAAY,sBACpBC,EAAQC,IAAMC,EAAKN,QAAAA,EAAKO,IAAIC,QAAQ,OAAQ,KAC5CJ,EAAQK,IAAMT,EAAKU,MAEbC,IAAAA,EAAcd,SAASK,cAAc,OAC3CS,EAAYR,UAAY,wBAElBO,IAAAA,EAAQb,SAASK,cAAc,MACrCQ,EAAMP,UAAY,8BAClBO,EAAME,UAAYZ,EAAKU,MAEjBG,IAAAA,EAAShB,SAASK,cAAc,KACtCW,EAAOV,UAAY,+BACnBU,EAAOD,UAAkBZ,MAAAA,OAAAA,EAAKa,QAExBC,IAAAA,EAAOjB,SAASK,cAAc,KACpCY,EAAKX,UAAY,kBAEXY,IAAAA,EAAQlB,SAASK,cAAc,KACrCa,EAAMZ,UAAY,8BAClBY,EAAMH,UAAgBZ,IAAAA,OAAAA,EAAKe,OAE3BJ,EAAYK,OAAON,EAAOG,EAAQC,EAAMC,GACxCd,EAAWe,OAAOZ,EAASO,GAC3Bf,EAAUqB,YAAYhB,MAMxBiB,EAAe,WACXC,IAAAA,EAAYtB,SAASuB,iBAAiB,+BACtCC,EAAYxB,SAASC,eAAe,QAC1CqB,EAAUG,QAAQ,SAAAC,GACdA,EAAGC,iBAAiB,QAAS,SAAAC,GACD,KAArBA,EAAEC,OAAOC,WACRN,EAAUO,SAAU,QAM9BC,EAAO,WACTlC,IACAuB,KAIJW","file":"app.c787e310.js","sourceRoot":"../public","sourcesContent":["// Display random books in showcase section every time user reloads Home page.\nimport fs from 'fs';\nimport imgs from './assets/*.jpg';\n\nconst booksJson = fs.readFileSync(__dirname + '/books_db.json', 'utf8');\nconst booksParsed = JSON.parse(booksJson);\n\nconst getFourRandomBooks = () => {\n    let arrRand = [];\n    do {\n        const randNum = Math.floor(Math.random() * booksParsed.length);\n        if(arrRand.indexOf(booksParsed[randNum]) == -1) {\n            arrRand.push(booksParsed[randNum])\n        } \n    } while (arrRand.length < 4);\n\n    return arrRand;\n}\n\nconst populateShowcase = () => {\n    const $showcase = document.getElementById('showcase-books');\n    const randBooks = getFourRandomBooks();\n\n    randBooks.map(book => {\n        const divWrapper = document.createElement('div');\n        divWrapper.className = 'showcase-card';\n\n        const bookImg = document.createElement('img');\n        bookImg.className = 'showcase-card-image';\n        bookImg.src = imgs[book.img.replace('.jpg', '')];\n        bookImg.alt = book.title;\n\n        const bookContent = document.createElement('div');\n        bookContent.className = 'showcase-card-content';\n\n        const title = document.createElement('h2');\n        title.className = 'showcase-card-content-title';\n        title.innerHTML = book.title;\n\n        const author = document.createElement('p');\n        author.className = 'showcase-card-content-author';\n        author.innerHTML = `by ${book.author}`;\n\n        const icon = document.createElement('i');\n        icon.className = 'fas fa-bookmark';\n\n        const price = document.createElement('p');\n        price.className = 'showcase-card-content-price';\n        price.innerHTML = `$${book.price}`;\n\n        bookContent.append(title, author, icon, price);\n        divWrapper.append(bookImg, bookContent);\n        $showcase.appendChild(divWrapper);\n    });\n}\n\n\n// UI improve: close nav menu when user clicks any page section\nconst closeNavMenu = () => {\n    const $navItems = document.querySelectorAll(\".nav-menu-wrapper-list-item\");\n    const $checkBox = document.getElementById(\"menu\");\n    $navItems.forEach($i => {\n        $i.addEventListener('click', e => {\n            if(e.target.nodeName == 'A') {\n                $checkBox.checked = false;\n            }\n        });\n    });\n}\n\nconst init = () => {\n    populateShowcase();\n    closeNavMenu();\n}\n\n\ninit();\n\n\n\n\n\n"]}